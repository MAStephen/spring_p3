
package client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "userWs", targetNamespace = "http://webService2.p3/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWs {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "init", targetNamespace = "http://webService2.p3/", className = "client.Init")
    @ResponseWrapper(localName = "initResponse", targetNamespace = "http://webService2.p3/", className = "client.InitResponse")
    @Action(input = "http://webService2.p3/userWs/initRequest", output = "http://webService2.p3/userWs/initResponse")
    public void init();

    /**
     * 
     * @param arg0
     * @return
     *     returns client.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserInfo", targetNamespace = "http://webService2.p3/", className = "client.GetUserInfo")
    @ResponseWrapper(localName = "getUserInfoResponse", targetNamespace = "http://webService2.p3/", className = "client.GetUserInfoResponse")
    @Action(input = "http://webService2.p3/userWs/getUserInfoRequest", output = "http://webService2.p3/userWs/getUserInfoResponse")
    public User getUserInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchEngineWorkByTitleAndAuthor", targetNamespace = "http://webService2.p3/", className = "client.SearchEngineWorkByTitleAndAuthor")
    @ResponseWrapper(localName = "searchEngineWorkByTitleAndAuthorResponse", targetNamespace = "http://webService2.p3/", className = "client.SearchEngineWorkByTitleAndAuthorResponse")
    @Action(input = "http://webService2.p3/userWs/searchEngineWorkByTitleAndAuthorRequest", output = "http://webService2.p3/userWs/searchEngineWorkByTitleAndAuthorResponse")
    public List<Work> searchEngineWorkByTitleAndAuthor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchEngineWorkByAuthor", targetNamespace = "http://webService2.p3/", className = "client.SearchEngineWorkByAuthor")
    @ResponseWrapper(localName = "searchEngineWorkByAuthorResponse", targetNamespace = "http://webService2.p3/", className = "client.SearchEngineWorkByAuthorResponse")
    @Action(input = "http://webService2.p3/userWs/searchEngineWorkByAuthorRequest", output = "http://webService2.p3/userWs/searchEngineWorkByAuthorResponse")
    public List<Work> searchEngineWorkByAuthor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<client.Work>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchEngineWorkByTitle", targetNamespace = "http://webService2.p3/", className = "client.SearchEngineWorkByTitle")
    @ResponseWrapper(localName = "searchEngineWorkByTitleResponse", targetNamespace = "http://webService2.p3/", className = "client.SearchEngineWorkByTitleResponse")
    @Action(input = "http://webService2.p3/userWs/searchEngineWorkByTitleRequest", output = "http://webService2.p3/userWs/searchEngineWorkByTitleResponse")
    public List<Work> searchEngineWorkByTitle(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<client.Borrowing>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBorrowingByUserId", targetNamespace = "http://webService2.p3/", className = "client.GetBorrowingByUserId")
    @ResponseWrapper(localName = "getBorrowingByUserIdResponse", targetNamespace = "http://webService2.p3/", className = "client.GetBorrowingByUserIdResponse")
    @Action(input = "http://webService2.p3/userWs/getBorrowingByUserIdRequest", output = "http://webService2.p3/userWs/getBorrowingByUserIdResponse")
    public List<Borrowing> getBorrowingByUserId(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns client.Borrowing
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnBorrowing", targetNamespace = "http://webService2.p3/", className = "client.ReturnBorrowing")
    @ResponseWrapper(localName = "returnBorrowingResponse", targetNamespace = "http://webService2.p3/", className = "client.ReturnBorrowingResponse")
    @Action(input = "http://webService2.p3/userWs/returnBorrowingRequest", output = "http://webService2.p3/userWs/returnBorrowingResponse")
    public Borrowing returnBorrowing(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns client.Borrowing
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "extendBorrowing", targetNamespace = "http://webService2.p3/", className = "client.ExtendBorrowing")
    @ResponseWrapper(localName = "extendBorrowingResponse", targetNamespace = "http://webService2.p3/", className = "client.ExtendBorrowingResponse")
    @Action(input = "http://webService2.p3/userWs/extendBorrowingRequest", output = "http://webService2.p3/userWs/extendBorrowingResponse")
    public Borrowing extendBorrowing(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns client.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUserInfo", targetNamespace = "http://webService2.p3/", className = "client.UpdateUserInfo")
    @ResponseWrapper(localName = "updateUserInfoResponse", targetNamespace = "http://webService2.p3/", className = "client.UpdateUserInfoResponse")
    @Action(input = "http://webService2.p3/userWs/updateUserInfoRequest", output = "http://webService2.p3/userWs/updateUserInfoResponse")
    public User updateUserInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Integer arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns client.Borrowing
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "borrowingBook", targetNamespace = "http://webService2.p3/", className = "client.BorrowingBook")
    @ResponseWrapper(localName = "borrowingBookResponse", targetNamespace = "http://webService2.p3/", className = "client.BorrowingBookResponse")
    @Action(input = "http://webService2.p3/userWs/borrowingBookRequest", output = "http://webService2.p3/userWs/borrowingBookResponse")
    public Borrowing borrowingBook(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Integer arg1);

}
