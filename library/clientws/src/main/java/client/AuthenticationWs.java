
package client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "authenticationWs", targetNamespace = "http://webService2.p3/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AuthenticationWs {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "init", targetNamespace = "http://webService2.p3/", className = "client.Init")
    @ResponseWrapper(localName = "initResponse", targetNamespace = "http://webService2.p3/", className = "client.InitResponse")
    @Action(input = "http://webService2.p3/authenticationWs/initRequest", output = "http://webService2.p3/authenticationWs/initResponse")
    public void init();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getResult", targetNamespace = "http://webService2.p3/", className = "client.GetResult")
    @ResponseWrapper(localName = "getResultResponse", targetNamespace = "http://webService2.p3/", className = "client.GetResultResponse")
    @Action(input = "http://webService2.p3/authenticationWs/getResultRequest", output = "http://webService2.p3/authenticationWs/getResultResponse")
    public String getResult();

    /**
     * 
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConnexionStatus", targetNamespace = "http://webService2.p3/", className = "client.GetConnexionStatus")
    @ResponseWrapper(localName = "getConnexionStatusResponse", targetNamespace = "http://webService2.p3/", className = "client.GetConnexionStatusResponse")
    @Action(input = "http://webService2.p3/authenticationWs/getConnexionStatusRequest", output = "http://webService2.p3/authenticationWs/getConnexionStatusResponse")
    public Boolean getConnexionStatus();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns client.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authentification", targetNamespace = "http://webService2.p3/", className = "client.Authentification")
    @ResponseWrapper(localName = "authentificationResponse", targetNamespace = "http://webService2.p3/", className = "client.AuthentificationResponse")
    @Action(input = "http://webService2.p3/authenticationWs/authentificationRequest", output = "http://webService2.p3/authenticationWs/authentificationResponse")
    public User authentification(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
